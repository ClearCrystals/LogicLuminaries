# Execute in order as below
stages:
  - lint
  - static_analysis
  - unit_test
  - release

lint_backend:
  stage: lint                                          # When to do it
  image: python:3
  before_script:
    - pip install -r requirements.txt                 # from lecture
  script:
    - black . --check --verbose --diff --color        # verbose -> check not change
      # max width of 100 and ignore unused imports and line break before binary operator
      - flake8 --max-line-length=100 --ignore=F401,W503 .
    tags:
    - dind

lint_frontend:
  stage: lint
  image: node:21
  before_script:
    - cd frontend
  script:
    - npx prettier --check .
  tags:
    - dind

static_analysis_backend:
  stage: static_analysis
  image: python:3
  before_script:
    - pip install -r ./requirements.txt
    - export DJANGO_TESTING=1
  script:
    - PYTHONPATH=backend:$PYTHONPATH mypy -p backend
  tags:
    - dind

unit_test_backend:
  stage: unit_test
  image: python
  before_script:
    - pip install -r ./requirements.txt
    - export DJANGO_TESTING=1
  script:
    - coverage run --omit=/usr/*,backend/manage.py,backend/sudoku/tests.py,backend/sudoku/migrations/*,backend/src/settings.py backend/manage.py test backend/sudoku
  after_script:
    - coverage report
    - coverage xml > coverage.xml
    - cat coverage.xml
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: ./coverage.xml
  coverage: /(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/
  tags:
    - dind

release:
  stage: release
  script:
    - echo placeholder
  tags:
    - dind
